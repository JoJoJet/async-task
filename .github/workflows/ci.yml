name: CI

on:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 2 * * *'

env:
  RUSTFLAGS: -D warnings
  RUST_BACKTRACE: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [nightly, beta, stable]
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - run: rustup target add thumbv7m-none-eabi
      - name: Install valgrind
        run: |
          sudo apt-get update
          sudo apt-get install -y valgrind
      - name: Run cargo check
        run: cargo check --all --all-features --all-targets
        if: startsWith(matrix.rust, 'nightly')
      - name: Run cargo check (no_std)
        run: cargo check --no-default-features --target thumbv7m-none-eabi
      - run: cargo test
      - name: Run cargo test (valgrind)
        run: cargo test -- --test-threads=1
        env:
          CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUNNER: "valgrind --leak-check=full --error-exitcode=1"

  msrv:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # When updating this, the reminder to update the minimum supported
        # Rust version in Cargo.toml and .clippy.toml.
        rust: ['1.39']
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update ${{ matrix.rust }} && rustup default ${{ matrix.rust }}
      - run: cargo build

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -W clippy::all

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: rustup update stable
      - run: cargo fmt --all -- --check

  security_audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
